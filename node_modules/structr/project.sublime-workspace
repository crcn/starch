{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "lib/index.js",
			"settings":
			{
				"buffer_size": 12188,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n\nvar EventEmitter = Structr({\n\n    /**\n     */\n     \n	'__construct': function ()\n	{                      \n		this._listeners = {};\n	},\n    \n    /**\n     * listens to an event\n     * @type The type of event to listen to\n     * @callback The callback when the event type is emitted\n     */\n     \n	'on': function (type, callback)\n	{             \n		(this._listeners[type] || (this._listeners[type] = [])).push(callback);       \n        \n		var self = this;\n		\n		return {\n			dispose: function ()\n			{                                \n				self.removeListener(type, callback);\n			}\n		}\n	},\n    \n    /**\n     * Removes an event listener\n     */\n     \n	'removeListener': function (type, callback)\n	{\n		var lists = this._listeners[type],i,\n		   self = this;\n		if(!lists) return;  \n		if((i = lists.indexOf(callback)) > -1)\n		{\n			lists.splice(i,1);\n			\n			if(!lists.length)\n			{\n				delete self._listeners[type];\n			}\n		}\n	},\n    \n    /**\n     * emits an event\n     */\n     \n	'emit': function ()\n	{                 \n		var args = [],\n			type = arguments[0],\n			lists;\n			\n		for(var i = 1, n = arguments.length; i < n; i++)\n		{\n			args[i-1] = arguments[i];\n		}       \n		\n		\n		if(lists = this._listeners[type])  \n		for(var i = lists.length; i--;)\n		{                       \n			lists[i].apply(this, args);\n		}     \n	}\n});      \n\n\n\n\n\nvar em = new EventEmitter();\n\nem.on('sayHello', function(value)\n{\n    alert('Hello '+value);\n});\n\nem.on('sayHello', function(value)\n{\n    alert('Hello '+value);\n});\n\nem.on('sayHello', function(value)\n{\n    alert('Hello '+value);\n});\n\nem.on('sayHello', function(value)\n{\n    alert('Hello '+value);\n});\n\n\nem.emit('sayHello', 'craig');",
			"file": "examples/events.js",
			"file_size": 1647,
			"file_write_time": 1329245889000000,
			"settings":
			{
				"buffer_size": 1649,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/proto.js",
			"settings":
			{
				"buffer_size": 587,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/tmp/subl stdin TLdPRD.txt",
		"/tmp/subl stdin F1RmBZ.txt",
		"/Users/craig/Developer/Public/structr/README.md",
		"/tmp/subl stdin 3nCWEX.txt",
		"/Users/craig/Developer/Public/structr/examples/wrapAround.js",
		"/tmp/subl stdin LzRuSh.txt",
		"/Users/craig/Developer/Public/structr/examples/proto.js",
		"/tmp/subl stdin 8UQj11.txt",
		"/tmp/subl stdin phXxWY.txt",
		"/tmp/subl stdin iPCA55.txt",
		"/tmp/subl stdin pKhZWT.txt",
		"/tmp/subl stdin oS83Eb.txt",
		"/Users/craig/Developer/Public/structr/lib/index.js",
		"/tmp/subl stdin tadUYI.txt",
		"/tmp/subl stdin hQkV3e.txt",
		"/Users/craig/Developer/Public/structr/.cupboard",
		"/tmp/subl stdin ebjHzN.txt",
		"/Volumes/minimac/Users/craig/Dropbox/Developer/Public/beet/lib/index.js",
		"/tmp/subl stdin 292YvE.txt"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".__construct",
			"_mixin",
			"_abstract",
			"_override",
			"override",
			"getNAr",
			"mixins",
			"modifierList",
			"_implicit",
			"getStepper",
			"getWrappedSt",
			"Structr.nAr",
			"nArgs	",
			"nArgs",
			"__construct",
			"wrapAround",
			"m_",
			"getFuncsByNArgs",
			"merge",
			"mixin",
			"mixins",
			"argsToArray",
			"Array.",
			"fh",
			"from",
			".extend",
			"that",
			"from",
			".extend",
			"argsToArray",
			"Structr(",
			"Structr",
			"Structr.copy",
			"wrap",
			"extend",
			"getMiddleware",
			"property",
			"wrapAround",
			"onEnd",
			"register",
			"_rem",
			"regis",
			"_addTransaction",
			"end",
			"dispose",
			".dispose",
			"register",
			"kill",
			"trans =",
			".remove",
			"args",
			"--all"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lib/index.js",
					"settings":
					{
						"buffer_size": 12188,
						"regions":
						{
						},
						"selection":
						[
							[
								328,
								328
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "examples/events.js",
					"settings":
					{
						"buffer_size": 1649,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "examples/proto.js",
					"settings":
					{
						"buffer_size": 587,
						"regions":
						{
						},
						"selection":
						[
							[
								287,
								287
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
